'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="AdventureWorks2012")>
Partial Public Class AdventureWorksDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertProductPhoto(instance As ProductPhoto)
    End Sub
  Partial Private Sub UpdateProductPhoto(instance As ProductPhoto)
    End Sub
  Partial Private Sub DeleteProductPhoto(instance As ProductPhoto)
    End Sub
  #End Region
	
	Public Sub New()
        MyBase.New(Global.PictureAndLinq.Settings.Default.AdventureWorksConnectionString, mappingSource)
        OnCreated()
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property ProductPhotos() As System.Data.Linq.Table(Of ProductPhoto)
		Get
			Return Me.GetTable(Of ProductPhoto)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="Production.ProductPhoto")>  _
Partial Public Class ProductPhoto
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ProductPhotoID As Integer
	
	Private _ThumbNailPhoto As System.Data.Linq.Binary
	
	Private _ThumbnailPhotoFileName As String
	
	Private _LargePhoto As System.Data.Linq.Binary
	
	Private _LargePhotoFileName As String
	
	Private _ModifiedDate As Date
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnProductPhotoIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnProductPhotoIDChanged()
    End Sub
    Partial Private Sub OnThumbNailPhotoChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnThumbNailPhotoChanged()
    End Sub
    Partial Private Sub OnThumbnailPhotoFileNameChanging(value As String)
    End Sub
    Partial Private Sub OnThumbnailPhotoFileNameChanged()
    End Sub
    Partial Private Sub OnLargePhotoChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnLargePhotoChanged()
    End Sub
    Partial Private Sub OnLargePhotoFileNameChanging(value As String)
    End Sub
    Partial Private Sub OnLargePhotoFileNameChanged()
    End Sub
    Partial Private Sub OnModifiedDateChanging(value As Date)
    End Sub
    Partial Private Sub OnModifiedDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductPhotoID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ProductPhotoID() As Integer
		Get
			Return Me._ProductPhotoID
		End Get
		Set
			If ((Me._ProductPhotoID = value)  _
						= false) Then
				Me.OnProductPhotoIDChanging(value)
				Me.SendPropertyChanging
				Me._ProductPhotoID = value
				Me.SendPropertyChanged("ProductPhotoID")
				Me.OnProductPhotoIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ThumbNailPhoto", DbType:="VarBinary(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ThumbNailPhoto() As System.Data.Linq.Binary
		Get
			Return Me._ThumbNailPhoto
		End Get
		Set
			If (Object.Equals(Me._ThumbNailPhoto, value) = false) Then
				Me.OnThumbNailPhotoChanging(value)
				Me.SendPropertyChanging
				Me._ThumbNailPhoto = value
				Me.SendPropertyChanged("ThumbNailPhoto")
				Me.OnThumbNailPhotoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ThumbnailPhotoFileName", DbType:="NVarChar(50)")>  _
	Public Property ThumbnailPhotoFileName() As String
		Get
			Return Me._ThumbnailPhotoFileName
		End Get
		Set
			If (String.Equals(Me._ThumbnailPhotoFileName, value) = false) Then
				Me.OnThumbnailPhotoFileNameChanging(value)
				Me.SendPropertyChanging
				Me._ThumbnailPhotoFileName = value
				Me.SendPropertyChanged("ThumbnailPhotoFileName")
				Me.OnThumbnailPhotoFileNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LargePhoto", DbType:="VarBinary(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LargePhoto() As System.Data.Linq.Binary
		Get
			Return Me._LargePhoto
		End Get
		Set
			If (Object.Equals(Me._LargePhoto, value) = false) Then
				Me.OnLargePhotoChanging(value)
				Me.SendPropertyChanging
				Me._LargePhoto = value
				Me.SendPropertyChanged("LargePhoto")
				Me.OnLargePhotoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LargePhotoFileName", DbType:="NVarChar(50)")>  _
	Public Property LargePhotoFileName() As String
		Get
			Return Me._LargePhotoFileName
		End Get
		Set
			If (String.Equals(Me._LargePhotoFileName, value) = false) Then
				Me.OnLargePhotoFileNameChanging(value)
				Me.SendPropertyChanging
				Me._LargePhotoFileName = value
				Me.SendPropertyChanged("LargePhotoFileName")
				Me.OnLargePhotoFileNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedDate", DbType:="DateTime NOT NULL")>  _
	Public Property ModifiedDate() As Date
		Get
			Return Me._ModifiedDate
		End Get
		Set
			If ((Me._ModifiedDate = value)  _
						= false) Then
				Me.OnModifiedDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifiedDate = value
				Me.SendPropertyChanged("ModifiedDate")
				Me.OnModifiedDateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
